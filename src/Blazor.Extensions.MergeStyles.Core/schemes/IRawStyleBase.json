{
    "$schema": "http://json-schema.org/draft-06/schema#",
    "definitions": {
        "ICSSRule": {
            "enum": [
                "inherit",
                "initial",
                "unset"
            ],
            "type": "string"
        },
        "ICSSPercentageRule": {
            "type": "string"
        },
        "ICSSPixelUnitRule": {
            "type": [
                "string",
                "number"
            ]
        },
        "IFontWeight": {
            "enum": [
                100,
                "100",
                200,
                "200",
                "300",
                300,
                "400",
                400,
                "500",
                500,
                600,
                "600",
                "700",
                700,
                800,
                "800",
                "900",
                900,
                "bold",
                "bolder",
                "inherit",
                "initial",
                "lighter",
                "normal",
                "unset"
            ]
        },
        "IRawFontStyle": {
            "description": "The base font style.",
            "title": "IRawFontStyle",
            "type": "object",
            "properties": {
                "font": {
                    "description": "The font property is shorthand that allows you to do one of two things: you can\neither set up six of the most mature font properties in one line, or you can set\n  one of a choice of keywords to adopt a system font setting.",
                    "type": "string",
                    "title": "font"
                },
                "fontFamily": {
                    "description": "The font-family property allows one or more font family names and/or generic family\nnames to be specified for usage on the selected element(s)' text. The browser then\ngoes through the list; for each character in the selection it applies the first\nfont family that has an available glyph for that character.",
                    "type": "string",
                    "title": "fontFamily"
                },
                "fontKerning": {
                    "description": "The font-kerning property allows contextual adjustment of inter-glyph spacing, i.e.\nthe spaces between the characters in text. This property controls <bold>metric\nkerning</bold> - that utilizes adjustment data contained in the font. Optical\nKerning is not supported as yet.",
                    "type": "string",
                    "title": "fontKerning"
                },
                "fontSize": {
                    "description": "Specifies the size of the font. Used to compute em and ex units.\nSee CSS 3 font-size property https://www.w3.org/TR/css-fonts-3/#propdef-font-size",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "fontSize"
                },
                "fontSizeAdjust": {
                    "description": "The font-size-adjust property adjusts the font-size of the fallback fonts defined\nwith font-family, so that the x-height is the same no matter what font is used.\nThis preserves the readability of the text when fallback happens.\nSee CSS 3 font-size-adjust property\nhttps://www.w3.org/TR/css-fonts-3/#propdef-font-size-adjust",
                    "anyOf": [
                        {
                            "enum": [
                                "inherit",
                                "initial",
                                "none",
                                "unset"
                            ],
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "title": "fontSizeAdjust"
                },
                "fontStretch": {
                    "description": "Allows you to expand or condense the widths for a normal, condensed, or expanded\nfont face.\nSee CSS 3 font-stretch property\nhttps://drafts.csswg.org/css-fonts-3/#propdef-font-stretch",
                    "enum": [
                        "condensed",
                        "expanded",
                        "extra-condensed",
                        "extra-expanded",
                        "inherit",
                        "initial",
                        "normal",
                        "semi-condensed",
                        "semi-expanded",
                        "ultra-condensed",
                        "ultra-expanded",
                        "unset"
                    ],
                    "type": "string",
                    "title": "fontStretch"
                },
                "fontStyle": {
                    "description": "The font-style property allows normal, italic, or oblique faces to be selected.\nItalic forms are generally cursive in nature while oblique faces are typically\nsloped versions of the regular face. Oblique faces can be simulated by artificially\nsloping the glyphs of the regular face.\nSee CSS 3 font-style property https://www.w3.org/TR/css-fonts-3/#propdef-font-style",
                    "enum": [
                        "inherit",
                        "initial",
                        "italic",
                        "normal",
                        "oblique",
                        "unset"
                    ],
                    "type": "string",
                    "title": "fontStyle"
                },
                "fontSynthesis": {
                    "description": "This value specifies whether the user agent is allowed to synthesize bold or\n  oblique font faces when a font family lacks bold or italic faces.",
                    "type": "string",
                    "title": "fontSynthesis"
                },
                "fontVariant": {
                    "description": "The font-variant property enables you to select the small-caps font within a font\nfamily.",
                    "type": "string",
                    "title": "fontVariant"
                },
                "fontVariantAlternates": {
                    "description": "Fonts can provide alternate glyphs in addition to default glyph for a character.\nThis property provides control over the selection of these alternate glyphs.",
                    "type": "string",
                    "title": "fontVariantAlternates"
                },
                "fontWeight": {
                    "description": "Specifies the weight or boldness of the font.\nSee CSS 3 'font-weight' property https://www.w3.org/TR/css-fonts-3/#propdef-font-weight",
                    "enum": [
                        100,
                        "100",
                        200,
                        "200",
                        "300",
                        300,
                        "400",
                        400,
                        "500",
                        500,
                        600,
                        "600",
                        "700",
                        700,
                        800,
                        "800",
                        "900",
                        900,
                        "bold",
                        "bolder",
                        "inherit",
                        "initial",
                        "lighter",
                        "normal",
                        "unset"
                    ],
                    "title": "fontWeight"
                }
            }
        },
        "IFontFace": {
            "description": "Font face definition.",
            "title": "IFontFace",
            "type": "object",
            "properties": {
                "src": {
                    "description": "Specifies the src of the font.",
                    "type": "string",
                    "title": "src"
                },
                "unicodeRange": {
                    "description": "unicode-range allows you to set a specific range of characters to be downloaded\nfrom a font (embedded using @font-face) and made available for use on the current\npage.",
                    "type": "string",
                    "title": "unicodeRange"
                },
                "fontFeatureSettings": {
                    "description": "Feature settings for the font.",
                    "type": "string",
                    "title": "fontFeatureSettings"
                },
                "font": {
                    "description": "The font property is shorthand that allows you to do one of two things: you can\neither set up six of the most mature font properties in one line, or you can set\n  one of a choice of keywords to adopt a system font setting.",
                    "type": "string",
                    "title": "font"
                },
                "fontFamily": {
                    "description": "The font-family property allows one or more font family names and/or generic family\nnames to be specified for usage on the selected element(s)' text. The browser then\ngoes through the list; for each character in the selection it applies the first\nfont family that has an available glyph for that character.",
                    "type": "string",
                    "title": "fontFamily"
                },
                "fontKerning": {
                    "description": "The font-kerning property allows contextual adjustment of inter-glyph spacing, i.e.\nthe spaces between the characters in text. This property controls <bold>metric\nkerning</bold> - that utilizes adjustment data contained in the font. Optical\nKerning is not supported as yet.",
                    "type": "string",
                    "title": "fontKerning"
                },
                "fontSize": {
                    "description": "Specifies the size of the font. Used to compute em and ex units.\nSee CSS 3 font-size property https://www.w3.org/TR/css-fonts-3/#propdef-font-size",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "fontSize"
                },
                "fontSizeAdjust": {
                    "description": "The font-size-adjust property adjusts the font-size of the fallback fonts defined\nwith font-family, so that the x-height is the same no matter what font is used.\nThis preserves the readability of the text when fallback happens.\nSee CSS 3 font-size-adjust property\nhttps://www.w3.org/TR/css-fonts-3/#propdef-font-size-adjust",
                    "anyOf": [
                        {
                            "enum": [
                                "inherit",
                                "initial",
                                "none",
                                "unset"
                            ],
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "title": "fontSizeAdjust"
                },
                "fontStretch": {
                    "description": "Allows you to expand or condense the widths for a normal, condensed, or expanded\nfont face.\nSee CSS 3 font-stretch property\nhttps://drafts.csswg.org/css-fonts-3/#propdef-font-stretch",
                    "enum": [
                        "condensed",
                        "expanded",
                        "extra-condensed",
                        "extra-expanded",
                        "inherit",
                        "initial",
                        "normal",
                        "semi-condensed",
                        "semi-expanded",
                        "ultra-condensed",
                        "ultra-expanded",
                        "unset"
                    ],
                    "type": "string",
                    "title": "fontStretch"
                },
                "fontStyle": {
                    "description": "The font-style property allows normal, italic, or oblique faces to be selected.\nItalic forms are generally cursive in nature while oblique faces are typically\nsloped versions of the regular face. Oblique faces can be simulated by artificially\nsloping the glyphs of the regular face.\nSee CSS 3 font-style property https://www.w3.org/TR/css-fonts-3/#propdef-font-style",
                    "enum": [
                        "inherit",
                        "initial",
                        "italic",
                        "normal",
                        "oblique",
                        "unset"
                    ],
                    "type": "string",
                    "title": "fontStyle"
                },
                "fontSynthesis": {
                    "description": "This value specifies whether the user agent is allowed to synthesize bold or\n  oblique font faces when a font family lacks bold or italic faces.",
                    "type": "string",
                    "title": "fontSynthesis"
                },
                "fontVariant": {
                    "description": "The font-variant property enables you to select the small-caps font within a font\nfamily.",
                    "type": "string",
                    "title": "fontVariant"
                },
                "fontVariantAlternates": {
                    "description": "Fonts can provide alternate glyphs in addition to default glyph for a character.\nThis property provides control over the selection of these alternate glyphs.",
                    "type": "string",
                    "title": "fontVariantAlternates"
                },
                "fontWeight": {
                    "description": "Specifies the weight or boldness of the font.\nSee CSS 3 'font-weight' property https://www.w3.org/TR/css-fonts-3/#propdef-font-weight",
                    "enum": [
                        100,
                        "100",
                        200,
                        "200",
                        "300",
                        300,
                        "400",
                        400,
                        "500",
                        500,
                        600,
                        "600",
                        "700",
                        700,
                        800,
                        "800",
                        "900",
                        900,
                        "bold",
                        "bolder",
                        "inherit",
                        "initial",
                        "lighter",
                        "normal",
                        "unset"
                    ],
                    "title": "fontWeight"
                }
            }
        },
        "IRawStyleBase": {
            "description": "All raw style properties.",
            "title": "IRawStyleBase",
            "type": "object",
            "properties": {
                "MsHighContrastAdjust": {
                    "description": "(Ms specific) constrast adjust rule.",
                    "type": "string",
                    "title": "MsHighContrastAdjust"
                },
                "MozOsxFontSmoothing": {
                    "description": "(Moz specific) font smoothing directive.",
                    "enum": [
                        "antialiased",
                        "grayscale",
                        "none",
                        "subpixel-antialiased"
                    ],
                    "type": "string",
                    "title": "MozOsxFontSmoothing"
                },
                "WebkitFontSmoothing": {
                    "description": "(Webkit specific) font smoothing directive.",
                    "enum": [
                        "antialiased",
                        "grayscale",
                        "none",
                        "subpixel-antialiased"
                    ],
                    "type": "string",
                    "title": "WebkitFontSmoothing"
                },
                "WebkitOverflowScrolling": {
                    "description": "(Webkit specific) momentum scrolling on iOS devices",
                    "enum": [
                        "auto",
                        "touch"
                    ],
                    "type": "string",
                    "title": "WebkitOverflowScrolling"
                },
                "alignContent": {
                    "description": "Aligns a flex container's lines within the flex container when there is extra space\nin the cross-axis, similar to how justify-content aligns individual items within the main-axis.",
                    "enum": [
                        "center",
                        "flex-end",
                        "flex-start",
                        "inherit",
                        "initial",
                        "space-around",
                        "space-between",
                        "stretch",
                        "unset"
                    ],
                    "type": "string",
                    "title": "alignContent"
                },
                "alignItems": {
                    "description": "Sets the default alignment in the cross axis for all of the flex container's items,\nincluding anonymous flex items, similarly to how justify-content aligns items along the main axis.",
                    "enum": [
                        "baseline",
                        "center",
                        "flex-end",
                        "flex-start",
                        "inherit",
                        "initial",
                        "stretch",
                        "unset"
                    ],
                    "type": "string",
                    "title": "alignItems"
                },
                "alignSelf": {
                    "description": "Allows the default alignment to be overridden for individual flex items.",
                    "enum": [
                        "auto",
                        "baseline",
                        "center",
                        "flex-end",
                        "flex-start",
                        "inherit",
                        "initial",
                        "stretch",
                        "unset"
                    ],
                    "type": "string",
                    "title": "alignSelf"
                },
                "alignmentAdjust": {
                    "description": "This property allows precise alignment of elements, such as graphics, that do not\nhave a baseline-table or lack the desired baseline in their baseline-table. With the\nalignment-adjust property, the position of the baseline identified by the\nalignment-baseline can be explicitly determined. It also determines precisely\nthe alignment point for each glyph within a textual element.",
                    "type": "string",
                    "title": "alignmentAdjust"
                },
                "alignmentBaseline": {
                    "description": "Specifies how an object is aligned with respect to its parent. This property specifies\nwhich baseline of this element is to be aligned with the corresponding baseline of the\nparent. For example, this allows alphabetic baselines in Roman text to stay aligned\nacross font size changes. It defaults to the baseline with the same name as the computed\nvalue of the alignment-baseline property.",
                    "type": "string",
                    "title": "alignmentBaseline"
                },
                "animation": {
                    "description": "The animation CSS property is a shorthand property for the various animation properties:\n`animation-name`, `animation-duration`, `animation-timing-function`, `animation-delay`,\n`animation-iteration-count`, `animation-direction`, `animation-fill-mode`, and\n`animation-play-state`.",
                    "type": "string",
                    "title": "animation"
                },
                "animationDelay": {
                    "description": "Defines a length of time to elapse before an animation starts, allowing an animation to begin execution some time after it is applied.",
                    "type": "string",
                    "title": "animationDelay"
                },
                "animationDirection": {
                    "description": "Defines whether an animation should run in reverse on some or all cycles.",
                    "type": "string",
                    "title": "animationDirection"
                },
                "animationDuration": {
                    "description": "Specifies the length an animation takes to finish. Default value is 0, meaning\nthere will be no animation.",
                    "type": "string",
                    "title": "animationDuration"
                },
                "animationFillMode": {
                    "description": "The animation-fill-mode CSS property specifies how a CSS animation should apply\nstyles to its target before and after its execution.",
                    "enum": [
                        "backwards",
                        "both",
                        "forwards",
                        "inherit",
                        "initial",
                        "none",
                        "unset"
                    ],
                    "type": "string",
                    "title": "animationFillMode"
                },
                "animationIterationCount": {
                    "description": "Specifies how many times an animation cycle should play.",
                    "type": "string",
                    "title": "animationIterationCount"
                },
                "animationName": {
                    "description": "Defines the list of animations that apply to the element.",
                    "type": "string",
                    "title": "animationName"
                },
                "animationPlayState": {
                    "description": "Defines whether an animation is running or paused.",
                    "type": "string",
                    "title": "animationPlayState"
                },
                "animationTimingFunction": {
                    "description": "The animation-timing-function specifies the speed curve of an animation.",
                    "type": "string",
                    "title": "animationTimingFunction"
                },
                "appearance": {
                    "description": "Allows changing the style of any element to platform-based interface elements or\nvice versa.",
                    "type": "string",
                    "title": "appearance"
                },
                "backfaceVisibility": {
                    "description": "Determines whether or not the “back” side of a transformed element is visible when\nfacing the viewer.",
                    "type": "string",
                    "title": "backfaceVisibility"
                },
                "background": {
                    "description": "Shorthand property to set the values for one or more of:\nbackground-clip, background-color, background-image,\nbackground-origin, background-position, background-repeat,\nbackground-size, and background-attachment.",
                    "type": "string",
                    "title": "background"
                },
                "backgroundAttachment": {
                    "description": "If a background-image is specified, this property determines\nwhether that image's position is fixed within the viewport,\nor scrolls along with its containing block.\nSee CSS 3 background-attachment property https://drafts.csswg.org/css-backgrounds-3/#the-background-attachment",
                    "enum": [
                        "fixed",
                        "inherit",
                        "initial",
                        "local",
                        "scroll",
                        "unset"
                    ],
                    "type": "string",
                    "title": "backgroundAttachment"
                },
                "backgroundBlendMode": {
                    "description": "This property describes how the element's background images should blend with each\nother and the element's background color. The value is a list of blend modes that\ncorresponds to each background image. Each element in the list will apply to the\ncorresponding element of background-image. If a property doesn’t have enough\ncomma-separated values to match the number of layers, the UA must calculate its\nused value by repeating the list of values until there are enough.",
                    "type": "string",
                    "title": "backgroundBlendMode"
                },
                "backgroundClip": {
                    "description": "The background-clip CSS property specifies if an element's background, whether a\n<color> or an <image>, extends underneath its border.\n\n\\* Does not work in IE\n\n\\* The `text` value is experimental and should not be used in production code.",
                    "enum": [
                        "border-box",
                        "content-box",
                        "inherit",
                        "initial",
                        "padding-box",
                        "text",
                        "unset"
                    ],
                    "type": "string",
                    "title": "backgroundClip"
                },
                "backgroundColor": {
                    "description": "Sets the background color of an element.",
                    "type": "string",
                    "title": "backgroundColor"
                },
                "backgroundComposite": {
                    "description": "Sets a compositing style for background images and colors.",
                    "type": "string",
                    "title": "backgroundComposite"
                },
                "backgroundImage": {
                    "description": "Applies one or more background images to an element. These can be any valid CSS\nimage, including url() paths to image files or CSS gradients.",
                    "type": "string",
                    "title": "backgroundImage"
                },
                "backgroundOrigin": {
                    "description": "Specifies what the background-position property is relative to.",
                    "type": "string",
                    "title": "backgroundOrigin"
                },
                "backgroundPosition": {
                    "description": "Sets the position of a background image.",
                    "type": "string",
                    "title": "backgroundPosition"
                },
                "backgroundRepeat": {
                    "description": "Background-repeat defines if and how background images will be repeated after they\nhave been sized and positioned",
                    "type": "string",
                    "title": "backgroundRepeat"
                },
                "backgroundSize": {
                    "description": "Sets the size of background images",
                    "type": "string",
                    "title": "backgroundSize"
                },
                "border": {
                    "description": "Shorthand property that defines the different properties of all four sides of an\nelement's border in a single declaration. It can be used to set border-width,\nborder-style and border-color, or a subset of these.",
                    "anyOf": [
                        {
                            "enum": [
                                0
                            ],
                            "type": "number"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "title": "border"
                },
                "borderBottom": {
                    "description": "Shorthand that sets the values of border-bottom-color,\nborder-bottom-style, and border-bottom-width.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "borderBottom"
                },
                "borderBottomColor": {
                    "description": "Sets the color of the bottom border of an element.",
                    "type": "string",
                    "title": "borderBottomColor"
                },
                "borderBottomLeftRadius": {
                    "description": "Defines the shape of the border of the bottom-left corner.",
                    "type": "string",
                    "title": "borderBottomLeftRadius"
                },
                "borderBottomRightRadius": {
                    "description": "Defines the shape of the border of the bottom-right corner.",
                    "type": "string",
                    "title": "borderBottomRightRadius"
                },
                "borderBottomStyle": {
                    "description": "Sets the line style of the bottom border of a box.",
                    "type": "string",
                    "title": "borderBottomStyle"
                },
                "borderBottomWidth": {
                    "description": "Sets the width of an element's bottom border. To set all four borders, use the\nborder-width shorthand property which sets the values simultaneously for\nborder-top-width, border-right-width, border-bottom-width, and border-left-width.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "borderBottomWidth"
                },
                "borderCollapse": {
                    "description": "Border-collapse can be used for collapsing the borders between table cells",
                    "type": "string",
                    "title": "borderCollapse"
                },
                "borderColor": {
                    "description": "The CSS border-color property sets the color of an element's four borders. This\nproperty can have from one to four values, made up of the elementary properties:\n      •       border-top-color\n      •       border-right-color\n      •       border-bottom-color\n      •       border-left-color The default color is the currentColor of each of\nthese values.\nIf you provide one value, it sets the color for the element. Two values set the\nhorizontal and vertical values, respectively. Providing three values sets the top,\nvertical, and bottom values, in that order. Four values set all for sides: top,\nright, bottom, and left, in that order.",
                    "type": "string",
                    "title": "borderColor"
                },
                "borderCornerShape": {
                    "description": "Specifies different corner clipping effects, such as scoop (inner curves), bevel\n(straight cuts) or notch (cut-off rectangles). Works along with border-radius to\nspecify the size of each corner effect.",
                    "type": "string",
                    "title": "borderCornerShape"
                },
                "borderImageSource": {
                    "description": "The property border-image-source is used to set the image to be used instead of\nthe border style. If this is set to none the border-style is used instead.",
                    "type": "string",
                    "title": "borderImageSource"
                },
                "borderImageWidth": {
                    "description": "The border-image-width CSS property defines the offset to use for dividing the\nborder image in nine parts, the top-left corner, central top edge, top-right-corner,\ncentral right edge, bottom-right corner, central bottom edge, bottom-left corner,\nand central right edge. They represent inward distance from the top, right, bottom,\nand left edges.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "borderImageWidth"
                },
                "borderLeft": {
                    "description": "Shorthand property that defines the border-width, border-style and border-color of\nan element's left border in a single declaration. Note that you can use the\ncorresponding longhand properties to set specific individual properties of the left\nborder — border-left-width, border-left-style and border-left-color.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "borderLeft"
                },
                "borderLeftColor": {
                    "description": "The CSS border-left-color property sets the color of an element's left border. This\n  page explains the border-left-color value, but often you will find it more\nconvenient to fix the border's left color as part of a shorthand set, either\nborder-left or border-color. Colors can be defined several ways. For more\ninformation, see Usage.",
                    "type": "string",
                    "title": "borderLeftColor"
                },
                "borderLeftStyle": {
                    "description": "Sets the style of an element's left border. To set all four borders, use the\nshorthand property, border-style. Otherwise, you can set the borders individually\nwith border-top-style, border-right-style, border-bottom-style, border-left-style.",
                    "type": "string",
                    "title": "borderLeftStyle"
                },
                "borderLeftWidth": {
                    "description": "Sets the width of an element's left border. To set all four borders, use the\nborder-width shorthand property which sets the values simultaneously for\nborder-top-width, border-right-width, border-bottom-width, and border-left-width.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "borderLeftWidth"
                },
                "borderRadius": {
                    "description": "Defines how round the border's corners are.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "borderRadius"
                },
                "borderRight": {
                    "description": "Shorthand property that defines the border-width, border-style and border-color of\nan element's right border in a single declaration. Note that you can use the\ncorresponding longhand properties to set specific individual properties of the\nright border — border-right-width, border-right-style and border-right-color.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "borderRight"
                },
                "borderRightColor": {
                    "description": "Sets the color of an element's right border. This page explains the\nborder-right-color value, but often you will find it more convenient to fix the\nborder's right color as part of a shorthand set, either border-right or border-color.\nColors can be defined several ways. For more information, see Usage.",
                    "type": "string",
                    "title": "borderRightColor"
                },
                "borderRightStyle": {
                    "description": "Sets the style of an element's right border. To set all four borders, use the\nshorthand property, border-style. Otherwise, you can set the borders individually\nwith border-top-style, border-right-style, border-bottom-style, border-left-style.",
                    "type": "string",
                    "title": "borderRightStyle"
                },
                "borderRightWidth": {
                    "description": "Sets the width of an element's right border. To set all four borders, use the\nborder-width shorthand property which sets the values simultaneously for\nborder-top-width, border-right-width, border-bottom-width, and border-left-width.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "borderRightWidth"
                },
                "borderSpacing": {
                    "description": "Specifies the distance between the borders of adjacent cells.",
                    "type": "string",
                    "title": "borderSpacing"
                },
                "borderStyle": {
                    "description": "Sets the style of an element's four borders. This property can have from one to\nfour values. With only one value, the value will be applied to all four borders;\notherwise, this works as a shorthand property for each of border-top-style,\n  border-right-style, border-bottom-style, border-left-style, where each border\n  style may be assigned a separate value.",
                    "type": "string",
                    "title": "borderStyle"
                },
                "borderTop": {
                    "description": "Shorthand property that defines the border-width, border-style and border-color of\nan element's top border in a single declaration. Note that you can use the\ncorresponding longhand properties to set specific individual properties of the top\nborder — border-top-width, border-top-style and border-top-color.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "borderTop"
                },
                "borderTopColor": {
                    "description": "Sets the color of an element's top border. This page explains the border-top-color\nvalue, but often you will find it more convenient to fix the border's top color as\npart of a shorthand set, either border-top or border-color.\nColors can be defined several ways. For more information, see Usage.",
                    "type": "string",
                    "title": "borderTopColor"
                },
                "borderTopLeftRadius": {
                    "description": "Sets the rounding of the top-left corner of the element.",
                    "type": "string",
                    "title": "borderTopLeftRadius"
                },
                "borderTopRightRadius": {
                    "description": "Sets the rounding of the top-right corner of the element.",
                    "type": "string",
                    "title": "borderTopRightRadius"
                },
                "borderTopStyle": {
                    "description": "Sets the style of an element's top border. To set all four borders, use the\nshorthand property, border-style. Otherwise, you can set the borders individually\nwith border-top-style, border-right-style, border-bottom-style, border-left-style.",
                    "type": "string",
                    "title": "borderTopStyle"
                },
                "borderTopWidth": {
                    "description": "Sets the width of an element's top border. To set all four borders, use the\nborder-width shorthand property which sets the values simultaneously for\nborder-top-width, border-right-width, border-bottom-width, and border-left-width.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "borderTopWidth"
                },
                "borderWidth": {
                    "description": "Sets the width of an element's four borders. This property can have from one to\nfour values. This is a shorthand property for setting values simultaneously for\nborder-top-width, border-right-width, border-bottom-width, and border-left-width.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "borderWidth"
                },
                "bottom": {
                    "description": "This property specifies how far an absolutely positioned box's bottom margin edge\nis offset above the bottom edge of the box's containing block. For relatively\npositioned boxes, the offset is with respect to the bottom edges of the box itself\n(i.e., the box is given a position in the normal flow, then offset from that\nposition according to these properties).",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "bottom"
                },
                "boxDecorationBreak": {
                    "description": "Breaks a box into fragments creating new borders, padding and repeating backgrounds\nor lets it stay as a continuous box on a page break, column break, or, for inline\nelements, at a line break.",
                    "type": "string",
                    "title": "boxDecorationBreak"
                },
                "boxShadow": {
                    "description": "Cast a drop shadow from the frame of almost any element.\nMDN: https://developer.mozilla.org/en-US/docs/Web/CSS/box-shadow",
                    "type": "string",
                    "title": "boxShadow"
                },
                "boxSizing": {
                    "description": "The CSS box-sizing property is used to alter the default CSS box model used to\ncalculate width and height of the elements.",
                    "enum": [
                        "border-box",
                        "content-box",
                        "inherit",
                        "initial",
                        "unset"
                    ],
                    "type": "string",
                    "title": "boxSizing"
                },
                "breakAfter": {
                    "description": "The CSS break-after property allows you to force a break on multi-column layouts.\nMore specifically, it allows you to force a break after an element. It allows you\nto determine if a break should occur, and what type of break it should be. The\nbreak-after CSS property describes how the page, column or region break behaves\nafter the generated box. If there is no generated box, the property is ignored.",
                    "type": "string",
                    "title": "breakAfter"
                },
                "breakBefore": {
                    "description": "Control page/column/region breaks that fall above a block of content",
                    "type": "string",
                    "title": "breakBefore"
                },
                "breakInside": {
                    "description": "Control page/column/region breaks that fall within a block of content",
                    "type": "string",
                    "title": "breakInside"
                },
                "clear": {
                    "description": "The clear CSS property specifies if an element can be positioned next to or must be\npositioned below the floating elements that precede it in the markup.",
                    "type": "string",
                    "title": "clear"
                },
                "clipRule": {
                    "description": "Clipping crops an graphic, so that only a portion of the graphic is rendered, or\nfilled. This clip-rule property, when used with the clip-path property, defines\nwhich clip rule, or algorithm, to use when filling the different parts of a graphics.",
                    "type": "string",
                    "title": "clipRule"
                },
                "color": {
                    "description": "The color property sets the color of an element's foreground content (usually text),\naccepting any standard CSS color from keywords and hex values to RGB(a) and HSL(a).",
                    "type": "string",
                    "title": "color"
                },
                "columnCount": {
                    "description": "Describes the number of columns of the element.\nSee CSS 3 column-count property https://www.w3.org/TR/css3-multicol/#cc",
                    "anyOf": [
                        {
                            "enum": [
                                "auto",
                                "inherit",
                                "initial",
                                "unset"
                            ],
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "title": "columnCount"
                },
                "columnFill": {
                    "description": "Specifies how to fill columns (balanced or sequential).",
                    "type": "string",
                    "title": "columnFill"
                },
                "columnGap": {
                    "description": "The column-gap property controls the width of the gap between columns in multi-column\nelements.",
                    "type": "string",
                    "title": "columnGap"
                },
                "columnRule": {
                    "description": "Sets the width, style, and color of the rule between columns.",
                    "type": "string",
                    "title": "columnRule"
                },
                "columnRuleColor": {
                    "description": "Specifies the color of the rule between columns.",
                    "type": "string",
                    "title": "columnRuleColor"
                },
                "columnRuleWidth": {
                    "description": "Specifies the width of the rule between columns.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "columnRuleWidth"
                },
                "columnSpan": {
                    "description": "The column-span CSS property makes it possible for an element to span across all\ncolumns when its value is set to all. An element that spans more than one column\nis called a spanning element.",
                    "type": "string",
                    "title": "columnSpan"
                },
                "columnWidth": {
                    "description": "Specifies the width of columns in multi-column elements.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "columnWidth"
                },
                "columns": {
                    "description": "This property is a shorthand property for setting column-width and/or column-count.",
                    "type": "string",
                    "title": "columns"
                },
                "content": {
                    "description": "Content for pseudo selectors.",
                    "type": "string",
                    "title": "content"
                },
                "counterIncrement": {
                    "description": "The counter-increment property accepts one or more names of counters (identifiers),\neach one optionally followed by an integer which specifies the value by which the\ncounter should be incremented (e.g. if the value is 2, the counter increases by 2\neach time it is invoked).",
                    "type": "string",
                    "title": "counterIncrement"
                },
                "counterReset": {
                    "description": "The counter-reset property contains a list of one or more names of counters, each\none optionally followed by an integer (otherwise, the integer defaults to 0.) Each\ntime the given element is invoked, the counters specified by the property are set to the given integer.",
                    "type": "string",
                    "title": "counterReset"
                },
                "cue": {
                    "description": "The cue property specifies sound files (known as an \"auditory icon\") to be played by\nspeech media agents before and after presenting an element's content; if only one\nfile is specified, it is played both before and after. The volume at which the\nfile(s) should be played, relative to the volume of the main element, may also be\nspecified. The icon files may also be set separately with the cue-before and\ncue-after properties.",
                    "type": "string",
                    "title": "cue"
                },
                "cueAfter": {
                    "description": "The cue-after property specifies a sound file (known as an \"auditory icon\") to be\nplayed by speech media agents after presenting an element's content; the volume at\nwhich the file should be played may also be specified. The shorthand property cue\nsets cue sounds for both before and after the element is presented.",
                    "type": "string",
                    "title": "cueAfter"
                },
                "cursor": {
                    "description": "Specifies the mouse cursor displayed when the mouse pointer is over an element.",
                    "type": "string",
                    "title": "cursor"
                },
                "direction": {
                    "description": "The direction CSS property specifies the text direction/writing direction. The rtl\nis used for Hebrew or Arabic text, the ltr is for other languages.",
                    "type": "string",
                    "title": "direction"
                },
                "display": {
                    "description": "This property specifies the type of rendering box used for an element. It is a\nshorthand property for many other display properties.",
                    "type": "string",
                    "title": "display"
                },
                "fill": {
                    "description": "The ‘fill’ property paints the interior of the given graphical element. The area to\nbe painted consists of any areas inside the outline of the shape. To determine the\ninside of the shape, all subpaths are considered, and the interior is determined\naccording to the rules associated with the current value of the ‘fill-rule’\nproperty. The zero-width geometric outline of a shape is included in the area to be\npainted.",
                    "type": "string",
                    "title": "fill"
                },
                "fillOpacity": {
                    "description": "SVG: Specifies the opacity of the color or the content the current object is filled\nwith.\nSee SVG 1.1 https://www.w3.org/TR/SVG/painting.html#FillOpacityProperty",
                    "anyOf": [
                        {
                            "enum": [
                                "inherit",
                                "initial",
                                "unset"
                            ],
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "title": "fillOpacity"
                },
                "fillRule": {
                    "description": "The ‘fill-rule’ property indicates the algorithm which is to be used to determine\nwhat parts of the canvas are included inside the shape. For a simple,\nnon-intersecting path, it is intuitively clear what region lies \"inside\"; however,\nfor a more complex path, such as a path that intersects itself or where one subpath\nencloses another, the interpretation of \"inside\" is not so obvious.\nThe ‘fill-rule’ property provides two options for how the inside of a shape is\ndetermined:",
                    "type": "string",
                    "title": "fillRule"
                },
                "filter": {
                    "description": "Applies various image processing effects. This property is largely unsupported. See\nCompatibility section for more information.",
                    "type": "string",
                    "title": "filter"
                },
                "flex": {
                    "description": "Shorthand for `flex-grow`, `flex-shrink`, and `flex-basis`.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "flex"
                },
                "flexBasis": {
                    "description": "The flex-basis CSS property describes the initial main size of the flex item before\nany free space is distributed according to the flex factors described in the flex\nproperty (flex-grow and flex-shrink).",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "flexBasis"
                },
                "flexDirection": {
                    "description": "The flex-direction CSS property describes how flex items are placed in the flex\ncontainer, by setting the direction of the flex container's main axis.",
                    "enum": [
                        "column",
                        "column-reverse",
                        "inherit",
                        "initial",
                        "row",
                        "row-reverse",
                        "unset"
                    ],
                    "type": "string",
                    "title": "flexDirection"
                },
                "flexFlow": {
                    "description": "The flex-flow CSS property defines the flex container's main and cross axis. It is\na shorthand property for the flex-direction and flex-wrap properties.",
                    "type": "string",
                    "title": "flexFlow"
                },
                "flexGrow": {
                    "description": "Specifies the flex grow factor of a flex item.\nSee CSS flex-grow property https://drafts.csswg.org/css-flexbox-1/#flex-grow-property",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "flexGrow"
                },
                "flexShrink": {
                    "description": "Specifies the flex shrink factor of a flex item.\nSee CSS flex-shrink property https://drafts.csswg.org/css-flexbox-1/#flex-shrink-property",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "flexShrink"
                },
                "flexWrap": {
                    "description": "Specifies whether flex items are forced into a single line or can be wrapped onto\nmultiple lines. If wrapping is allowed, this property also enables you to control\nthe direction in which lines are stacked.\nSee CSS flex-wrap property https://drafts.csswg.org/css-flexbox-1/#flex-wrap-property",
                    "enum": [
                        "inherit",
                        "initial",
                        "nowrap",
                        "unset",
                        "wrap",
                        "wrap-reverse"
                    ],
                    "type": "string",
                    "title": "flexWrap"
                },
                "float": {
                    "description": "Elements which have the style float are floated horizontally. These elements can\nmove as far to the left or right of the containing element. All elements after\nthe floating element will flow around it, but elements before the floating element\nare not impacted. If several floating elements are placed after each other, they\nwill float next to each other as long as there is room.",
                    "type": "string",
                    "title": "float"
                },
                "flowFrom": {
                    "description": "Flows content from a named flow (specified by a corresponding flow-into) through\nselected elements to form a dynamic chain of layout regions.",
                    "type": "string",
                    "title": "flowFrom"
                },
                "gridArea": {
                    "description": "Lays out one or more grid items bound by 4 grid lines. Shorthand for setting\ngrid-column-start, grid-column-end, grid-row-start, and grid-row-end in a single\ndeclaration.",
                    "type": "string",
                    "title": "gridArea"
                },
                "gridColumn": {
                    "description": "Controls a grid item's placement in a grid area, particularly grid position and a\ngrid span. Shorthand for setting grid-column-start and grid-column-end in a single\ndeclaration.",
                    "type": "string",
                    "title": "gridColumn"
                },
                "gridColumnEnd": {
                    "description": "Controls a grid item's placement in a grid area as well as grid position and a\ngrid span. The grid-column-end property (with grid-row-start, grid-row-end, and\ngrid-column-start) determines a grid item's placement by specifying the grid lines\nof a grid item's grid area.",
                    "type": "string",
                    "title": "gridColumnEnd"
                },
                "gridColumnStart": {
                    "description": "Determines a grid item's placement by specifying the starting grid lines of a grid\nitem's grid area . A grid item's placement in a grid area consists of a grid\nposition and a grid span. See also ( grid-row-start, grid-row-end, and\ngrid-column-end)",
                    "type": "string",
                    "title": "gridColumnStart"
                },
                "gridRow": {
                    "description": "Gets or sets a value that indicates which row an element within a Grid should\nappear in. Shorthand for setting grid-row-start and grid-row-end in a single\ndeclaration.",
                    "type": "string",
                    "title": "gridRow"
                },
                "gridRowEnd": {
                    "description": "Determines a grid item’s placement by specifying the block-end. A grid item's\nplacement in a grid area consists of a grid position and a grid span. The\ngrid-row-end property (with grid-row-start, grid-column-start, and grid-column-end)\ndetermines a grid item's placement by specifying the grid lines of a grid item's\ngrid area.",
                    "type": "string",
                    "title": "gridRowEnd"
                },
                "gridRowPosition": {
                    "description": "Specifies a row position based upon an integer location, string value, or desired\nrow size.\ncss/properties/grid-row is used as short-hand for grid-row-position and\ngrid-row-position",
                    "type": "string",
                    "title": "gridRowPosition"
                },
                "gridTemplateAreas": {
                    "description": "Specifies named grid areas which are not associated with any particular grid item,\nbut can be referenced from the grid-placement properties. The syntax of the\ngrid-template-areas property also provides a visualization of the structure of the\ngrid, making the overall layout of the grid container easier to understand.",
                    "type": "string",
                    "title": "gridTemplateAreas"
                },
                "gridTemplateColumns": {
                    "description": "Specifies (with grid-template-rows) the line names and track sizing functions of\nthe grid. Each sizing function can be specified as a length, a percentage of the\ngrid container’s size, a measurement of the contents occupying the column or row,\nor a fraction of the free space in the grid.",
                    "type": "string",
                    "title": "gridTemplateColumns"
                },
                "gridTemplateRows": {
                    "description": "Specifies (with grid-template-columns) the line names and track sizing functions of\nthe grid. Each sizing function can be specified as a length, a percentage of the\ngrid container’s size, a measurement of the contents occupying the column or row,\nor a fraction of the free space in the grid.",
                    "type": "string",
                    "title": "gridTemplateRows"
                },
                "height": {
                    "description": "Sets the height of an element. The content area of the element height does not\ninclude the padding, border, and margin of the element.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "height"
                },
                "hyphenateLimitChars": {
                    "description": "Specifies the minimum number of characters in a hyphenated word",
                    "type": "string",
                    "title": "hyphenateLimitChars"
                },
                "hyphenateLimitLines": {
                    "description": "Indicates the maximum number of successive hyphenated lines in an element. The\n‘no-limit’ value means that there is no limit.",
                    "type": "string",
                    "title": "hyphenateLimitLines"
                },
                "hyphenateLimitZone": {
                    "description": "Specifies the maximum amount of trailing whitespace (before justification) that may\nbe left in a line before hyphenation is triggered to pull part of a word from the\nnext line back up into the current one.",
                    "type": "string",
                    "title": "hyphenateLimitZone"
                },
                "hyphens": {
                    "description": "Specifies whether or not words in a sentence can be split by the use of a manual or\nautomatic hyphenation mechanism.",
                    "type": "string",
                    "title": "hyphens"
                },
                "justifyContent": {
                    "description": "Defines how the browser distributes space between and around flex items\nalong the main-axis of their container.\nSee CSS justify-content property\nhttps://www.w3.org/TR/css-flexbox-1/#justify-content-property",
                    "enum": [
                        "center",
                        "flex-end",
                        "flex-start",
                        "inherit",
                        "initial",
                        "space-around",
                        "space-between",
                        "space-evenly",
                        "unset"
                    ],
                    "type": "string",
                    "title": "justifyContent"
                },
                "left": {
                    "description": "Sets the left position of an element relative to the nearest anscestor that is set\nto position absolute, relative, or fixed.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "left"
                },
                "letterSpacing": {
                    "description": "The letter-spacing CSS property specifies the spacing behavior between text\ncharacters.",
                    "type": "string",
                    "title": "letterSpacing"
                },
                "lineHeight": {
                    "description": "Specifies the height of an inline block level element.\nSee CSS 2.1 line-height property https://www.w3.org/TR/CSS21/visudet.html#propdef-line-height",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "lineHeight"
                },
                "listStyle": {
                    "description": "Shorthand property that sets the list-style-type, list-style-position and\nlist-style-image properties in one declaration.",
                    "type": "string",
                    "title": "listStyle"
                },
                "listStyleImage": {
                    "description": "This property sets the image that will be used as the list item marker. When the\nimage is available, it will replace the marker set with the 'list-style-type'\nmarker. That also means that if the image is not available, it will show the style\nspecified by list-style-property",
                    "type": "string",
                    "title": "listStyleImage"
                },
                "listStylePosition": {
                    "description": "Specifies if the list-item markers should appear inside or outside the content flow.",
                    "type": "string",
                    "title": "listStylePosition"
                },
                "listStyleType": {
                    "description": "Specifies the type of list-item marker in a list.",
                    "type": "string",
                    "title": "listStyleType"
                },
                "margin": {
                    "description": "The margin property is shorthand to allow you to set all four margins of an element\nat once. Its equivalent longhand properties are margin-top, margin-right,\nmargin-bottom and margin-left. Negative values are also allowed.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "margin"
                },
                "marginBottom": {
                    "description": "margin-bottom sets the bottom margin of an element.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "marginBottom"
                },
                "marginLeft": {
                    "description": "margin-left sets the left margin of an element.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "marginLeft"
                },
                "marginRight": {
                    "description": "margin-right sets the right margin of an element.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "marginRight"
                },
                "marginTop": {
                    "description": "margin-top sets the top margin of an element.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "marginTop"
                },
                "marqueeDirection": {
                    "description": "The marquee-direction determines the initial direction in which the marquee content moves.",
                    "type": "string",
                    "title": "marqueeDirection"
                },
                "marqueeStyle": {
                    "description": "The 'marquee-style' property determines a marquee's scrolling behavior.",
                    "type": "string",
                    "title": "marqueeStyle"
                },
                "mask": {
                    "description": "This property is shorthand for setting mask-image, mask-mode, mask-repeat,\nmask-position, mask-clip, mask-origin, mask-composite and mask-size. Omitted\nvalues are set to their original properties' initial values.",
                    "type": "string",
                    "title": "mask"
                },
                "maskBorder": {
                    "description": "This property is shorthand for setting mask-border-source, mask-border-slice,\nmask-border-width, mask-border-outset, and mask-border-repeat. Omitted values\nare set to their original properties' initial values.",
                    "type": "string",
                    "title": "maskBorder"
                },
                "maskBorderRepeat": {
                    "description": "This property specifies how the images for the sides and the middle part of the\nmask image are scaled and tiled. The first keyword applies to the horizontal\nsides, the second one applies to the vertical ones. If the second keyword is\nabsent, it is assumed to be the same as the first, similar to the CSS\nborder-image-repeat property.",
                    "type": "string",
                    "title": "maskBorderRepeat"
                },
                "maskBorderSlice": {
                    "description": "This property specifies inward offsets from the top, right, bottom, and left\nedges of the mask image, dividing it into nine regions: four corners, four\nedges, and a middle. The middle image part is discarded and treated as fully\ntransparent black unless the fill keyword is present. The four values set the\ntop, right, bottom and left offsets in that order, similar to the CSS\nborder-image-slice property.",
                    "type": "string",
                    "title": "maskBorderSlice"
                },
                "maskBorderSource": {
                    "description": "Specifies an image to be used as a mask. An image that is empty, fails to\ndownload, is non-existent, or cannot be displayed is ignored and does not mask\nthe element.",
                    "type": "string",
                    "title": "maskBorderSource"
                },
                "maskBorderWidth": {
                    "description": "This property sets the width of the mask box image, similar to the CSS\nborder-image-width property.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "maskBorderWidth"
                },
                "maskClip": {
                    "description": "Determines the mask painting area, which defines the area that is affected by\nthe mask. The painted content of an element may be restricted to this area.",
                    "type": "string",
                    "title": "maskClip"
                },
                "maskOrigin": {
                    "description": "For elements rendered as a single box, specifies the mask positioning area. For\nelements rendered as multiple boxes (e.g., inline boxes on several lines, boxes\non several pages) specifies which boxes box-decoration-break operates on to\ndetermine the mask positioning area(s).",
                    "type": "string",
                    "title": "maskOrigin"
                },
                "maxFontSize": {
                    "description": "This property must not be used. It is no longer included in any standard or\nstandard track specification, nor is it implemented in any browser. It is only\nused when the text-align-last property is set to size. It controls allowed\nadjustments of font-size to fit line content.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "maxFontSize"
                },
                "maxHeight": {
                    "description": "Sets the maximum height for an element. It prevents the height of the element to\n  exceed the specified value. If min-height is specified and is greater than\nmax-height, max-height is overridden.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "maxHeight"
                },
                "maxWidth": {
                    "description": "Sets the maximum width for an element. It limits the width property to be larger\nthan the value specified in max-width.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "maxWidth"
                },
                "minHeight": {
                    "description": "Sets the minimum height for an element. It prevents the height of the element to\nbe smaller than the specified value. The value of min-height overrides both\nmax-height and height.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "minHeight"
                },
                "minWidth": {
                    "description": "Sets the minimum width of an element. It limits the width property to be not\nsmaller than the value specified in min-width.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "minWidth"
                },
                "opacity": {
                    "description": "Specifies the transparency of an element.\nSee CSS 3 opacity property https://drafts.csswg.org/css-color-3/#opacity",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "opacity"
                },
                "order": {
                    "description": "Specifies the order used to lay out flex items in their flex container.\nElements are laid out in the ascending order of the order value.\nSee CSS order property https://drafts.csswg.org/css-flexbox-1/#order-property",
                    "anyOf": [
                        {
                            "enum": [
                                "inherit",
                                "initial",
                                "unset"
                            ],
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "title": "order"
                },
                "orphans": {
                    "description": "In paged media, this property defines the minimum number of lines in\na block container that must be left at the bottom of the page.\nSee CSS 3 orphans, widows properties https://drafts.csswg.org/css-break-3/#widows-orphans",
                    "anyOf": [
                        {
                            "enum": [
                                "inherit",
                                "initial",
                                "unset"
                            ],
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "title": "orphans"
                },
                "outline": {
                    "description": "The CSS outline property is a shorthand property for setting one or more of the\nindividual outline properties outline-style, outline-width and outline-color in a\nsingle rule. In most cases the use of this shortcut is preferable and more\nconvenient.\nOutlines differ from borders in the following ways:\n      •       Outlines do not take up space, they are drawn above the content.\n      •       Outlines may be non-rectangular. They are rectangular in\nGecko/Firefox. Internet Explorer attempts to place the smallest contiguous outline\naround all elements or shapes that are indicated to have an outline. Opera draws a\nnon-rectangular shape around a construct.",
                    "anyOf": [
                        {
                            "enum": [
                                0
                            ],
                            "type": "number"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "title": "outline"
                },
                "outlineColor": {
                    "description": "The outline-color property sets the color of the outline of an element. An\noutline is a line that is drawn around elements, outside the border edge, to make\nthe element stand out.",
                    "type": "string",
                    "title": "outlineColor"
                },
                "outlineOffset": {
                    "description": "The outline-offset property offsets the outline and draw it beyond the border edge.",
                    "type": "string",
                    "title": "outlineOffset"
                },
                "overflow": {
                    "description": "The overflow property controls how extra content exceeding the bounding box of an\nelement is rendered. It can be used in conjunction with an element that has a\nfixed width and height, to eliminate text-induced page distortion.",
                    "enum": [
                        "auto",
                        "hidden",
                        "inherit",
                        "initial",
                        "scroll",
                        "unset",
                        "visible"
                    ],
                    "type": "string",
                    "title": "overflow"
                },
                "overflowStyle": {
                    "description": "Specifies the preferred scrolling methods for elements that overflow.",
                    "type": "string",
                    "title": "overflowStyle"
                },
                "overflowWrap": {
                    "description": "Specifies whether or not the browser should insert line breaks within words to\nprevent text from overflowing its content box. In contrast to word-break,\noverflow-wrap will only create a break if an entire word cannot be placed on its\nown line without overflowing.",
                    "enum": [
                        "break-word",
                        "inherit",
                        "initial",
                        "normal",
                        "unset"
                    ],
                    "type": "string",
                    "title": "overflowWrap"
                },
                "overflowX": {
                    "description": "Controls how extra content exceeding the x-axis of the bounding box of an element\nis rendered.",
                    "enum": [
                        "auto",
                        "hidden",
                        "inherit",
                        "initial",
                        "scroll",
                        "unset",
                        "visible"
                    ],
                    "type": "string",
                    "title": "overflowX"
                },
                "overflowY": {
                    "description": "Controls how extra content exceeding the y-axis of the bounding box of an element\nis rendered.",
                    "enum": [
                        "auto",
                        "hidden",
                        "inherit",
                        "initial",
                        "scroll",
                        "unset",
                        "visible"
                    ],
                    "type": "string",
                    "title": "overflowY"
                },
                "padding": {
                    "description": "The padding optional CSS property sets the required padding space on one to four\nsides of an element. The padding area is the space between an element and its\nborder. Negative values are not allowed but decimal values are permitted. The\n  element size is treated as fixed, and the content of the element shifts toward the\ncenter as padding is increased. The padding property is a shorthand to avoid\nsetting each side separately (padding-top, padding-right, padding-bottom,\npadding-left).",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "padding"
                },
                "paddingBottom": {
                    "description": "The padding-bottom CSS property of an element sets the padding space required on\nthe bottom of an element. The padding area is the space between the content of the\nelement and its border. Contrary to margin-bottom values, negative values of\npadding-bottom are invalid.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "paddingBottom"
                },
                "paddingLeft": {
                    "description": "The padding-left CSS property of an element sets the padding space required on the\nleft side of an element. The padding area is the space between the content of the\nelement and its border. Contrary to margin-left values, negative values of\npadding-left are invalid.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "paddingLeft"
                },
                "paddingRight": {
                    "description": "The padding-right CSS property of an element sets the padding space required on the\nright side of an element. The padding area is the space between the content of the\nelement and its border. Contrary to margin-right values, negative values of\npadding-right are invalid.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "paddingRight"
                },
                "paddingTop": {
                    "description": "The padding-top CSS property of an element sets the padding space required on the\ntop of an element. The padding area is the space between the content of the element\nand its border. Contrary to margin-top values, negative values of padding-top are\ninvalid.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "paddingTop"
                },
                "pageBreakAfter": {
                    "description": "The page-break-after property is supported in all major browsers. With CSS3,\n  page-break-* properties are only aliases of the break-* properties. The CSS3\nFragmentation spec defines breaks for all CSS box fragmentation.",
                    "type": "string",
                    "title": "pageBreakAfter"
                },
                "pageBreakBefore": {
                    "description": "The page-break-before property sets the page-breaking behavior before an element.\nWith CSS3, page-break-* properties are only aliases of the break-* properties. The\nCSS3 Fragmentation spec defines breaks for all CSS box fragmentation.",
                    "type": "string",
                    "title": "pageBreakBefore"
                },
                "pageBreakInside": {
                    "description": "Sets the page-breaking behavior inside an element. With CSS3, page-break-*\nproperties are only aliases of the break-* properties. The CSS3 Fragmentation spec\ndefines breaks for all CSS box fragmentation.",
                    "type": "string",
                    "title": "pageBreakInside"
                },
                "pause": {
                    "description": "The pause property determines how long a speech media agent should pause before and\nafter presenting an element. It is a shorthand for the pause-before and pause-after\n  properties.",
                    "type": "string",
                    "title": "pause"
                },
                "pauseAfter": {
                    "description": "The pause-after property determines how long a speech media agent should pause after\npresenting an element. It may be replaced by the shorthand property pause, which\nsets pause time before and after.",
                    "type": "string",
                    "title": "pauseAfter"
                },
                "pauseBefore": {
                    "description": "The pause-before property determines how long a speech media agent should pause\nbefore presenting an element. It may be replaced by the shorthand property pause,\nwhich sets pause time before and after.",
                    "type": "string",
                    "title": "pauseBefore"
                },
                "perspective": {
                    "description": "The perspective property defines how far an element is placed from the view on the\nz-axis, from the screen to the viewer. Perspective defines how an object is viewed.\nIn graphic arts, perspective is the representation on a flat surface of what the\nviewer's eye would see in a 3D space. (See Wikipedia for more information about\ngraphical perspective and for related illustrations.)\nThe illusion of perspective on a flat surface, such as a computer screen, is created\nby projecting points on the flat surface as they would appear if the flat surface\nwere a window through which the viewer was looking at the object. In discussion of\nvirtual environments, this flat surface is called a projection plane.",
                    "type": "string",
                    "title": "perspective"
                },
                "perspectiveOrigin": {
                    "description": "The perspective-origin property establishes the origin for the perspective property.\nIt effectively sets the X and Y position at which the viewer appears to be looking\nat the children of the element.\nWhen used with perspective, perspective-origin changes the appearance of an object,\nas if a viewer were looking at it from a different origin. An object appears\ndifferently if a viewer is looking directly at it versus looking at it from below,\nabove, or from the side. Thus, the perspective-origin is like a vanishing point.\nThe default value of perspective-origin is 50% 50%. This displays an object as if\nthe viewer's eye were positioned directly at the center of the screen, both\ntop-to-bottom and left-to-right. A value of 0% 0% changes the object as if the\nviewer was looking toward the top left angle. A value of 100% 100% changes the\nappearance as if viewed toward the bottom right angle.",
                    "type": "string",
                    "title": "perspectiveOrigin"
                },
                "pointerEvents": {
                    "description": "The pointer-events property allows you to control whether an element can be the\ntarget for the pointing device (e.g, mouse, pen) events.",
                    "type": "string",
                    "title": "pointerEvents"
                },
                "position": {
                    "description": "The position property controls the type of positioning used by an element within\nits parent elements. The effect of the position property depends on a lot of\nfactors, for example the position property of parent elements.",
                    "enum": [
                        "absolute",
                        "fixed",
                        "inherit",
                        "initial",
                        "relative",
                        "static",
                        "sticky",
                        "unset"
                    ],
                    "type": "string",
                    "title": "position"
                },
                "quotes": {
                    "description": "Sets the type of quotation marks for embedded quotations.",
                    "type": "string",
                    "title": "quotes"
                },
                "regionFragment": {
                    "description": "Controls whether the last region in a chain displays additional 'overset' content\naccording its default overflow property, or if it displays a fragment of content\nas if it were flowing into a subsequent region.",
                    "type": "string",
                    "title": "regionFragment"
                },
                "resize": {
                    "description": "The resize CSS sets whether an element is resizable, and if so, in which direction(s).",
                    "enum": [
                        "block",
                        "both",
                        "horizontal",
                        "inherit",
                        "initial",
                        "inline",
                        "none",
                        "unset",
                        "vertical"
                    ],
                    "type": "string",
                    "title": "resize"
                },
                "restAfter": {
                    "description": "The rest-after property determines how long a speech media agent should pause after\npresenting an element's main content, before presenting that element's exit cue\nsound. It may be replaced by the shorthand property rest, which sets rest time\nbefore and after.",
                    "type": "string",
                    "title": "restAfter"
                },
                "restBefore": {
                    "description": "The rest-before property determines how long a speech media agent should pause after\npresenting an intro cue sound for an element, before presenting that element's main\ncontent. It may be replaced by the shorthand property rest, which sets rest time\nbefore and after.",
                    "type": "string",
                    "title": "restBefore"
                },
                "right": {
                    "description": "Specifies the position an element in relation to the right side of the containing\nelement.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "right"
                },
                "shapeImageThreshold": {
                    "description": "Defines the alpha channel threshold used to extract a shape from an image. Can be\nthought of as a \"minimum opacity\" threshold; that is, a value of 0.5 means that the\nshape will enclose all the pixels that are more than 50% opaque.",
                    "type": "string",
                    "title": "shapeImageThreshold"
                },
                "shapeInside": {
                    "description": "A future level of CSS Shapes will define a shape-inside property, which will define\na shape to wrap content within the element. See Editor's Draft\n<http://dev.w3.org/csswg/css-shapes/> and CSSWG wiki page on next-level plans\n<http://wiki.csswg.org/spec/css-shapes>",
                    "type": "string",
                    "title": "shapeInside"
                },
                "shapeMargin": {
                    "description": "Adds a margin to a shape-outside. In effect, defines a new shape that is the\nsmallest contour around all the points that are the shape-margin distance outward\nperpendicular to each point on the underlying shape. For points where a\nperpendicular direction is not defined (e.g., a triangle corner), takes all\npoints on a circle centered at the point and with a radius of the shape-margin\ndistance. This property accepts only non-negative values.",
                    "type": "string",
                    "title": "shapeMargin"
                },
                "shapeOutside": {
                    "description": "Declares a shape around which text should be wrapped, with possible modifications\nfrom the shape-margin property. The shape defined by shape-outside and shape-margin\nchanges the geometry of a float element's float area.",
                    "type": "string",
                    "title": "shapeOutside"
                },
                "speak": {
                    "description": "The speak property determines whether or not a speech synthesizer will read aloud\nthe contents of an element.",
                    "type": "string",
                    "title": "speak"
                },
                "speakAs": {
                    "description": "The speak-as property determines how the speech synthesizer interprets the content:\nwords as whole words or as a sequence of letters, numbers as a numerical value or a\nsequence of digits, punctuation as pauses in speech or named punctuation characters.",
                    "type": "string",
                    "title": "speakAs"
                },
                "stroke": {
                    "description": "The stroke property in CSS is for adding a border to SVG shapes.\nSee SVG 1.1 https://www.w3.org/TR/SVG/painting.html#Stroke",
                    "type": "string",
                    "title": "stroke"
                },
                "strokeOpacity": {
                    "description": "SVG: Specifies the opacity of the outline on the current object.\nSee SVG 1.1 https://www.w3.org/TR/SVG/painting.html#StrokeOpacityProperty",
                    "anyOf": [
                        {
                            "enum": [
                                "inherit",
                                "initial",
                                "unset"
                            ],
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "title": "strokeOpacity"
                },
                "strokeWidth": {
                    "description": "SVG: Specifies the width of the outline on the current object.\nSee SVG 1.1 https://www.w3.org/TR/SVG/painting.html#StrokeWidthProperty",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "strokeWidth"
                },
                "tabSize": {
                    "description": "The tab-size CSS property is used to customise the width of a tab (U+0009) character.",
                    "type": "string",
                    "title": "tabSize"
                },
                "tableLayout": {
                    "description": "The 'table-layout' property controls the algorithm used to lay out the table cells, rows, and columns.",
                    "type": "string",
                    "title": "tableLayout"
                },
                "textAlign": {
                    "description": "The text-align CSS property describes how inline content like text is aligned in its\nparent block element. text-align does not control the alignment of block elements\nitself, only their inline content.",
                    "type": "string",
                    "title": "textAlign"
                },
                "textAlignLast": {
                    "description": "The text-align-last CSS property describes how the last line of a block element or\na line before line break is aligned in its parent block element.",
                    "type": "string",
                    "title": "textAlignLast"
                },
                "textDecoration": {
                    "description": "The text-decoration CSS property is used to set the text formatting to underline,\noverline, line-through or blink. underline and overline decorations are positioned\nunder the text, line-through over it.",
                    "type": "string",
                    "title": "textDecoration"
                },
                "textDecorationColor": {
                    "description": "Sets the color of any text decoration, such as underlines, overlines, and strike\nthroughs.",
                    "type": "string",
                    "title": "textDecorationColor"
                },
                "textDecorationLine": {
                    "description": "Sets what kind of line decorations are added to an element, such as underlines,\noverlines, etc.",
                    "type": "string",
                    "title": "textDecorationLine"
                },
                "textDecorationSkip": {
                    "description": "Specifies what parts of an element’s content are skipped over when applying any\ntext decoration.",
                    "type": "string",
                    "title": "textDecorationSkip"
                },
                "textDecorationStyle": {
                    "description": "This property specifies the style of the text decoration line drawn on the\nspecified element. The intended meaning for the values are the same as those of\nthe border-style-properties.",
                    "type": "string",
                    "title": "textDecorationStyle"
                },
                "textEmphasis": {
                    "description": "The text-emphasis property will apply special emphasis marks to the elements text.\nSlightly similar to the text-decoration property only that this property can have\naffect on the line-height. It also is noted that this is shorthand for\ntext-emphasis-style and for text-emphasis-color.",
                    "type": "string",
                    "title": "textEmphasis"
                },
                "textEmphasisColor": {
                    "description": "The text-emphasis-color property specifies the foreground color of the emphasis\nmarks.",
                    "type": "string",
                    "title": "textEmphasisColor"
                },
                "textEmphasisStyle": {
                    "description": "The text-emphasis-style property applies special emphasis marks to an element's\ntext.",
                    "type": "string",
                    "title": "textEmphasisStyle"
                },
                "textHeight": {
                    "description": "This property helps determine an inline box's block-progression dimension, derived\nfrom the text-height and font-size properties for non-replaced elements, the height\nor the width for replaced elements, and the stacked block-progression dimension for\ninline-block elements. The block-progression dimension determines the position of\nthe padding, border and margin for the element.",
                    "type": "string",
                    "title": "textHeight"
                },
                "textIndent": {
                    "description": "Specifies the amount of space horizontally that should be left on the first line of\nthe text of an element. This horizontal spacing is at the beginning of the first\nline and is in respect to the left edge of the containing block box.",
                    "type": "string",
                    "title": "textIndent"
                },
                "textOverflow": {
                    "description": "The text-overflow shorthand CSS property determines how overflowed content that is\nnot displayed is signaled to the users. It can be clipped, display an ellipsis\n('…', U+2026 HORIZONTAL ELLIPSIS) or a Web author-defined string. It covers the\ntwo long-hand properties text-overflow-mode and text-overflow-ellipsis",
                    "type": "string",
                    "title": "textOverflow"
                },
                "textOverline": {
                    "description": "The text-overline property is the shorthand for the text-overline-style,\ntext-overline-width, text-overline-color, and text-overline-mode properties.",
                    "type": "string",
                    "title": "textOverline"
                },
                "textOverlineColor": {
                    "description": "Specifies the line color for the overline text decoration.",
                    "type": "string",
                    "title": "textOverlineColor"
                },
                "textOverlineMode": {
                    "description": "Sets the mode for the overline text decoration, determining whether the text\ndecoration affects the space characters or not.",
                    "type": "string",
                    "title": "textOverlineMode"
                },
                "textOverlineStyle": {
                    "description": "Specifies the line style for overline text decoration.",
                    "type": "string",
                    "title": "textOverlineStyle"
                },
                "textOverlineWidth": {
                    "description": "Specifies the line width for the overline text decoration.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "textOverlineWidth"
                },
                "textRendering": {
                    "description": "The text-rendering CSS property provides information to the browser about how to\noptimize when rendering text. Options are: legibility, speed or geometric precision.",
                    "type": "string",
                    "title": "textRendering"
                },
                "textShadow": {
                    "description": "The CSS text-shadow property applies one or more drop shadows to the text and\n<text-decorations> of an element. Each shadow is specified as an offset from the\ntext, along with optional color and blur radius values.",
                    "type": "string",
                    "title": "textShadow"
                },
                "textTransform": {
                    "description": "This property transforms text for styling purposes. (It has no effect on the\nunderlying content.)",
                    "type": "string",
                    "title": "textTransform"
                },
                "textUnderlinePosition": {
                    "description": "Unsupported.\nThis property will add a underline position value to the element that has an\nunderline defined.",
                    "type": "string",
                    "title": "textUnderlinePosition"
                },
                "textUnderlineStyle": {
                    "description": "After review this should be replaced by text-decoration should it not?\nThis property will set the underline style for text with a line value for\nunderline, overline, and line-through.",
                    "type": "string",
                    "title": "textUnderlineStyle"
                },
                "top": {
                    "description": "This property specifies how far an absolutely positioned box's top margin edge is\noffset below the top edge of the box's containing block. For relatively positioned\nboxes, the offset is with respect to the top edges of the box itself (i.e., the box\nis given a position in the normal flow, then offset from that position according to\nthese properties).",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "top"
                },
                "touchAction": {
                    "description": "Determines whether touch input may trigger default behavior supplied by the user\nagent, such as panning or zooming.",
                    "type": "string",
                    "title": "touchAction"
                },
                "transform": {
                    "description": "CSS transforms allow elements styled with CSS to be transformed in two-dimensional\nor three-dimensional space. Using this property, elements can be translated,\nrotated, scaled, and skewed. The value list may consist of 2D and/or 3D transform\nvalues.",
                    "type": "string",
                    "title": "transform"
                },
                "transformOrigin": {
                    "description": "This property defines the origin of the transformation axes relative to the element\nto which the transformation is applied.",
                    "type": "string",
                    "title": "transformOrigin"
                },
                "transformOriginZ": {
                    "description": "This property allows you to define the relative position of the origin of the\ntransformation grid along the z-axis.",
                    "type": "string",
                    "title": "transformOriginZ"
                },
                "transformStyle": {
                    "description": "This property specifies how nested elements are rendered in 3D space relative to their parent.",
                    "type": "string",
                    "title": "transformStyle"
                },
                "transition": {
                    "description": "The transition CSS property is a shorthand property for transition-property,\ntransition-duration, transition-timing-function, and transition-delay. It allows to\ndefine the transition between two states of an element.",
                    "type": "string",
                    "title": "transition"
                },
                "transitionDelay": {
                    "description": "Defines when the transition will start. A value of ‘0s’ means the transition will\nexecute as soon as the property is changed. Otherwise, the value specifies an\noffset from the moment the property is changed, and the transition will delay\nexecution by that offset.",
                    "type": "string",
                    "title": "transitionDelay"
                },
                "transitionDuration": {
                    "description": "The 'transition-duration' property specifies the length of time a transition\nanimation takes to complete.",
                    "type": "string",
                    "title": "transitionDuration"
                },
                "transitionProperty": {
                    "description": "The 'transition-property' property specifies the name of the CSS property to which\nthe transition is applied.",
                    "type": "string",
                    "title": "transitionProperty"
                },
                "transitionTimingFunction": {
                    "description": "Sets the pace of action within a transition",
                    "type": "string",
                    "title": "transitionTimingFunction"
                },
                "unicodeBidi": {
                    "description": "The unicode-bidi CSS property specifies the level of embedding with respect to the bidirectional algorithm.",
                    "type": "string",
                    "title": "unicodeBidi"
                },
                "userFocus": {
                    "description": "This is for all the high level UX stuff.",
                    "type": "string",
                    "title": "userFocus"
                },
                "userInput": {
                    "description": "For inputing user content",
                    "type": "string",
                    "title": "userInput"
                },
                "userSelect": {
                    "description": "Defines the text selection behavior.",
                    "enum": [
                        "all",
                        "auto",
                        "contain",
                        "inherit",
                        "initial",
                        "none",
                        "text",
                        "unset"
                    ],
                    "type": "string",
                    "title": "userSelect"
                },
                "verticalAlign": {
                    "description": "The vertical-align property controls how inline elements or text are vertically\naligned compared to the baseline. If this property is used on table-cells it\ncontrols the vertical alignment of content of the table cell.",
                    "type": "string",
                    "title": "verticalAlign"
                },
                "visibility": {
                    "description": "The visibility property specifies whether the boxes generated by an element are rendered.",
                    "type": "string",
                    "title": "visibility"
                },
                "voiceBalance": {
                    "description": "The voice-balance property sets the apparent position (in stereo sound) of the synthesized voice for spoken media.",
                    "type": "string",
                    "title": "voiceBalance"
                },
                "voiceDuration": {
                    "description": "The voice-duration property allows the author to explicitly set the amount of time\nit should take a speech synthesizer to read an element's content, for example to\nallow the speech to be synchronized with other media. With a value of auto (the\ndefault) the length of time it takes to read the content is determined by the\ncontent itself and the voice-rate property.",
                    "type": "string",
                    "title": "voiceDuration"
                },
                "voiceFamily": {
                    "description": "The voice-family property sets the speaker's voice used by a speech media agent to\nread an element. The speaker may be specified as a named character (to match a\nvoice option in the speech reading software) or as a generic description of the\nage and gender of the voice. Similar to the font-family property for visual media,\na comma-separated list of fallback options may be given in case the speech reader\ndoes not recognize the character name or cannot synthesize the requested combination\nof generic properties.",
                    "type": "string",
                    "title": "voiceFamily"
                },
                "voicePitch": {
                    "description": "The voice-pitch property sets pitch or tone (high or low) for the synthesized speech\nwhen reading an element; the pitch may be specified absolutely or relative to the\nnormal pitch for the voice-family used to read the text.",
                    "type": "string",
                    "title": "voicePitch"
                },
                "voiceRange": {
                    "description": "The voice-range property determines how much variation in pitch or tone will be\ncreated by the speech synthesize when reading an element. Emphasized text,\ngrammatical structures and punctuation may all be rendered as changes in pitch,\nthis property determines how strong or obvious those changes are; large ranges are\nassociated with enthusiastic or emotional speech, while small ranges are associated\nwith flat or mechanical speech.",
                    "type": "string",
                    "title": "voiceRange"
                },
                "voiceRate": {
                    "description": "The voice-rate property sets the speed at which the voice synthesized by a speech\nmedia agent will read content.",
                    "type": "string",
                    "title": "voiceRate"
                },
                "voiceStress": {
                    "description": "The voice-stress property sets the level of vocal emphasis to be used for\nsynthesized speech reading the element.",
                    "type": "string",
                    "title": "voiceStress"
                },
                "voiceVolume": {
                    "description": "The voice-volume property sets the volume for spoken content in speech media. It\nreplaces the deprecated volume property.",
                    "type": "string",
                    "title": "voiceVolume"
                },
                "whiteSpace": {
                    "description": "The white-space property controls whether and how white space inside the element is\ncollapsed, and whether lines may wrap at unforced \"soft wrap\" opportunities.",
                    "type": "string",
                    "title": "whiteSpace"
                },
                "widows": {
                    "description": "In paged media, this property defines the mimimum number of lines that must be left\nat the top of the second page.\nSee CSS 3 orphans, widows properties\nhttps://drafts.csswg.org/css-break-3/#widows-orphans",
                    "anyOf": [
                        {
                            "enum": [
                                "inherit",
                                "initial",
                                "unset"
                            ],
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "title": "widows"
                },
                "width": {
                    "description": "Specifies the width of the content area of an element. The content area of the element\nwidth does not include the padding, border, and margin of the element.",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "width"
                },
                "wordBreak": {
                    "description": "The word-break property is often used when there is long generated content that is\nstrung together without and spaces or hyphens to beak apart. A common case of this\nis when there is a long URL that does not have any hyphens. This case could\npotentially cause the breaking of the layout as it could extend past the parent\nelement.",
                    "type": "string",
                    "title": "wordBreak"
                },
                "wordSpacing": {
                    "description": "The word-spacing CSS property specifies the spacing behavior between \"words\".",
                    "type": "string",
                    "title": "wordSpacing"
                },
                "wordWrap": {
                    "description": "An alias of css/properties/overflow-wrap, word-wrap defines whether to break\nwords when the content exceeds the boundaries of its container.",
                    "type": "string",
                    "title": "wordWrap"
                },
                "wrapFlow": {
                    "description": "Specifies how exclusions affect inline content within block-level elements. Elements\nlay out their inline content in their content area but wrap around exclusion areas.",
                    "type": "string",
                    "title": "wrapFlow"
                },
                "wrapMargin": {
                    "description": "Set the value that is used to offset the inner wrap shape from other shapes. Inline\ncontent that intersects a shape with this property will be pushed by this shape's\nmargin.",
                    "type": "string",
                    "title": "wrapMargin"
                },
                "writingMode": {
                    "description": "writing-mode specifies if lines of text are laid out horizontally or vertically,\nand the direction which lines of text and blocks progress.",
                    "type": "string",
                    "title": "writingMode"
                },
                "zIndex": {
                    "description": "The z-index property specifies the z-order of an element and its descendants.\nWhen elements overlap, z-order determines which one covers the other.\nSee CSS 2 z-index property https://www.w3.org/TR/CSS2/visuren.html#z-index",
                    "anyOf": [
                        {
                            "enum": [
                                "auto",
                                "inherit",
                                "initial",
                                "unset"
                            ],
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "title": "zIndex"
                },
                "zoom": {
                    "description": "Sets the initial zoom factor of a document defined by @viewport.\nSee CSS zoom descriptor https://drafts.csswg.org/css-device-adapt/#zoom-desc",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "zoom"
                },
                "font": {
                    "description": "The font property is shorthand that allows you to do one of two things: you can\neither set up six of the most mature font properties in one line, or you can set\n  one of a choice of keywords to adopt a system font setting.",
                    "type": "string",
                    "title": "font"
                },
                "fontFamily": {
                    "description": "The font-family property allows one or more font family names and/or generic family\nnames to be specified for usage on the selected element(s)' text. The browser then\ngoes through the list; for each character in the selection it applies the first\nfont family that has an available glyph for that character.",
                    "type": "string",
                    "title": "fontFamily"
                },
                "fontKerning": {
                    "description": "The font-kerning property allows contextual adjustment of inter-glyph spacing, i.e.\nthe spaces between the characters in text. This property controls <bold>metric\nkerning</bold> - that utilizes adjustment data contained in the font. Optical\nKerning is not supported as yet.",
                    "type": "string",
                    "title": "fontKerning"
                },
                "fontSize": {
                    "description": "Specifies the size of the font. Used to compute em and ex units.\nSee CSS 3 font-size property https://www.w3.org/TR/css-fonts-3/#propdef-font-size",
                    "type": [
                        "string",
                        "number"
                    ],
                    "title": "fontSize"
                },
                "fontSizeAdjust": {
                    "description": "The font-size-adjust property adjusts the font-size of the fallback fonts defined\nwith font-family, so that the x-height is the same no matter what font is used.\nThis preserves the readability of the text when fallback happens.\nSee CSS 3 font-size-adjust property\nhttps://www.w3.org/TR/css-fonts-3/#propdef-font-size-adjust",
                    "anyOf": [
                        {
                            "enum": [
                                "inherit",
                                "initial",
                                "none",
                                "unset"
                            ],
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "title": "fontSizeAdjust"
                },
                "fontStretch": {
                    "description": "Allows you to expand or condense the widths for a normal, condensed, or expanded\nfont face.\nSee CSS 3 font-stretch property\nhttps://drafts.csswg.org/css-fonts-3/#propdef-font-stretch",
                    "enum": [
                        "condensed",
                        "expanded",
                        "extra-condensed",
                        "extra-expanded",
                        "inherit",
                        "initial",
                        "normal",
                        "semi-condensed",
                        "semi-expanded",
                        "ultra-condensed",
                        "ultra-expanded",
                        "unset"
                    ],
                    "type": "string",
                    "title": "fontStretch"
                },
                "fontStyle": {
                    "description": "The font-style property allows normal, italic, or oblique faces to be selected.\nItalic forms are generally cursive in nature while oblique faces are typically\nsloped versions of the regular face. Oblique faces can be simulated by artificially\nsloping the glyphs of the regular face.\nSee CSS 3 font-style property https://www.w3.org/TR/css-fonts-3/#propdef-font-style",
                    "enum": [
                        "inherit",
                        "initial",
                        "italic",
                        "normal",
                        "oblique",
                        "unset"
                    ],
                    "type": "string",
                    "title": "fontStyle"
                },
                "fontSynthesis": {
                    "description": "This value specifies whether the user agent is allowed to synthesize bold or\n  oblique font faces when a font family lacks bold or italic faces.",
                    "type": "string",
                    "title": "fontSynthesis"
                },
                "fontVariant": {
                    "description": "The font-variant property enables you to select the small-caps font within a font\nfamily.",
                    "type": "string",
                    "title": "fontVariant"
                },
                "fontVariantAlternates": {
                    "description": "Fonts can provide alternate glyphs in addition to default glyph for a character.\nThis property provides control over the selection of these alternate glyphs.",
                    "type": "string",
                    "title": "fontVariantAlternates"
                },
                "fontWeight": {
                    "description": "Specifies the weight or boldness of the font.\nSee CSS 3 'font-weight' property https://www.w3.org/TR/css-fonts-3/#propdef-font-weight",
                    "enum": [
                        100,
                        "100",
                        200,
                        "200",
                        "300",
                        300,
                        "400",
                        400,
                        "500",
                        500,
                        600,
                        "600",
                        "700",
                        700,
                        800,
                        "800",
                        "900",
                        900,
                        "bold",
                        "bolder",
                        "inherit",
                        "initial",
                        "lighter",
                        "normal",
                        "unset"
                    ],
                    "title": "fontWeight"
                }
            }
        }
    }
}
